name: Build Vaultwarden for x86 & ARM

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [x86_64, aarch64]
    
    steps:
      - name: Download latest Vaultwarden release
        run: |
          VAULTWARDEN_URL=$(curl -s https://api.github.com/repos/dani-garcia/vaultwarden/releases/latest | jq -r '.zipball_url')
          curl -L $VAULTWARDEN_URL -o vaultwarden.zip
          unzip vaultwarden.zip -d ./
          pwd
          ls -la
          #ls ./vaultwarden/ -la

      - name: Install Rust toolchain
        run: |
          rustup update
          rustup target add ${{ matrix.arch }}-unknown-linux-gnu

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y gcc-${{ matrix.arch }}-linux-gnu
    
      

      - name: Build Vaultwarden
        run: |
          cargo build --release --target ${{ matrix.arch }}-unknown-linux-gnu --features sqlite

      - name: Package Vaultwarden as tar file
        run: |
          mkdir -p vaultwarden-${{ matrix.arch }}
          cp target/${{ matrix.arch }}-unknown-linux-gnu/release/vaultwarden vaultwarden-${{ matrix.arch }}/
          tar -czvf vaultwarden-${{ matrix.arch }}.tar.gz vaultwarden-${{ matrix.arch }}

      - name: Upload Vaultwarden tar file as GitHub Artifact
        uses: actions/upload-artifact@v4
        with:
          name: vaultwarden-${{ matrix.arch }}
          path: vaultwarden-${{ matrix.arch }}.tar.gz