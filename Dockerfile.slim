FROM vaultwarden/server:alpine
# Set the default value for the data directory to a writable location
# Setting this in github actions instead #ENV DATA_FOLDER="/tmp/vaultwarden/data"

# Sets the port for the Rocket web framework
ENV ROCKET_ADDRESS=0.0.0.0
ENV ROCKET_PORT=8080

# Install dependencies using apk
RUN apk add --no-cache tar sqlite curl ca-certificates jq gzip curl unzip

# Install rclone
RUN curl https://rclone.org/install.sh | bash
# Create rclone config directory
RUN mkdir -p /root/.config/rclone
# Copy rclone config file (ensure you have rclone.conf in your project)
COPY rclone.conf /root/.config/rclone/rclone.conf


# Use the GitHub API to get the download URL for the latest release asset
# that ends with "litestream-linux-amd64.zip".
RUN export LATEST_ASSET_URL=$(curl -s "https://api.github.com/repos/benbjohnson/litestream/releases/latest" | \
      jq -r '.assets[] | select(.name | endswith("linux-amd64.tar.gz")) | .browser_download_url') && \
    echo "Downloading Litestream asset from: ${LATEST_ASSET_URL}" && \
    curl -L "${LATEST_ASSET_URL}" -o /tmp/litestream.tar.gz && \
    # Extract the tar.gz archive; assuming it contains a file named litestream-linux-amd64
    tar -xzvf /tmp/litestream.tar.gz -C /usr/local/bin/ && \
    # Rename the binary to "litestream" if needed. Adjust the source name if the archive structure differs.
    # mv /usr/local/bin/litestream-linux-amd64 /usr/local/bin/litestream && \
    chmod +x /usr/local/bin/litestream && \
    rm /tmp/litestream.tar.gz

# Optionally, verify installation by printing the version
RUN litestream version

# Set working directory
WORKDIR /

# Copy Vaultwarden binary from latest release
#COPY vaultwarden /vaultwarden/vaultwarden
COPY --from=builder /src/vaultwarden/target/release/vaultwarden /vaultwarden
RUN chmod +x /vaultwarden

# Copy web-vault wesite from latest release
COPY web-vault /web-vault


# Copy Litestream config
COPY litestream.yml /etc/litestream.yml

# Copy rclone sync script
# Note: This script will run in the background to sync data to S3
COPY rclone_sync.sh /rclone_sync.sh
RUN chmod +x /rclone_sync.sh

# Expose Vaultwarden API port
EXPOSE 8080

# AWS Lambda requires entrypoint to be `/lambda-entrypoint.sh`
COPY lambda-entrypoint.sh /lambda-entrypoint.sh
RUN chmod +x /lambda-entrypoint.sh

# CMD for AWS Lambda container execution
CMD ["/lambda-entrypoint.sh"]
